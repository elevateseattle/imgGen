name: Generate Image

on:
  workflow_dispatch:
    inputs:
      text:
        description: 'Text to convert to image'
        required: true
      color:
        description: 'Background color of the image'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Ensure the token has write permissions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Use the latest version

    - name: Install Node.js
      uses: actions/setup-node@v3  # Use the latest version
      with:
        node-version: '20'  # Use Node.js 20

    - name: Generate Image
      env:
        INPUT_TEXT: ${{ github.event.inputs.text }}  # Set the text input as an environment variable
        INPUT_COLOR: ${{ github.event.inputs.color }}  # Set the color input as an environment variable
      run: |
        npm install canvas
        node -e "
          const { createCanvas } = require('canvas');
          const fs = require('fs');
          const text = process.env.INPUT_TEXT;
          const color = process.env.INPUT_COLOR;
          const filename = text.replace(/,/g, '').replace(/\s+/g, '_').toLowerCase() + '.jpg';
          const canvas = createCanvas(250, 100);
          const ctx = canvas.getContext('2d');
          ctx.rect(0, 0, 250, 100);
          ctx.fillStyle = color;
          ctx.fill();
          ctx.font = '11px Helvetica';
          ctx.fillStyle = 'ghostwhite';

          // Function to wrap text
          function wrapText(context, text, x, y, maxWidth, lineHeight) {
            const words = text.split(' ');
            let line = '';
            for (let n = 0; n < words.length; n++) {
              const testLine = line + words[n] + ' ';
              const metrics = context.measureText(testLine);
              const testWidth = metrics.width;
              if (testWidth > maxWidth && n > 0) {
                context.fillText(line, x, y);
                line = words[n] + ' ';
                y += lineHeight;
              } else {
                line = testLine;
              }
            }
            context.fillText(line, x, y);
          }

          wrapText(ctx, text, 10, 20, 230, 20);

          const buffer = canvas.toBuffer('image/jpeg');
          fs.mkdirSync('generated_images', { recursive: true });
          fs.writeFileSync('generated_images/' + filename, buffer);
        "

    - name: Commit and push the image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add generated_images/*.jpg
        git commit -m "Generated image with words in filename"
        git push origin main
